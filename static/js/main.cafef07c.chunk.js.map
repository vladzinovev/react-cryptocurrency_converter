{"version":3,"sources":["stores/converter-store.ts","stores/currencies-store.ts","stores/index.ts","hooks/use-stores.tsx","components/CryptoTable.tsx","components/ConverterBlock.tsx","App.tsx","index.tsx"],"names":["ConverterStore","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","makeObservable","name","selectedInCoin","price","selectedInPrice","selectedOutCoin","observable","computed","action","CurrenciesStore","currencies_store_descriptor","currencies_store_descriptor2","currencies_store_descriptor3","_descriptor4","arr1","arr2","filter","obj","index","items","diffObj","_this","diffCurrencies","reduce","initObj","newObj","find","o","oldObj","itemObj","color","axios","get","then","response","coins","data","Data","map","coin","CoinInfo","Name","fullName","FullName","imageUrl","concat","ImageUrl","RAW","USD","PRICE","toFixed","volume24Hour","VOLUME24HOUR","_this2","setItems","stores","createContext","currenciesStore","converterStore","useStores","useContext","currencyIcon","width","height","CryptoTable","observer","_useStores","getItems","getDiffObj","_useState","useState","_useState2","slicedToArray","flag","setFlag","useEffect","update","timerId","setInterval","fetchCoins","clearInterval","react_default","a","createElement","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","length","className","onClick","setSelectedInCoin","setSelectedInPrice","onClickRow","key","hover","&:last-child td, &:last-child th","border","scope","style","src","alt","Item","styled","_ref","theme","objectSpread","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","text","secondary","cryptoInputBox","marginTop","currencyInput","marginRight","currencyType","ConverterBlock","value2","setValue2","findprice","curOutPriceName","getSelectedOutCoin","curInPriceName","getSelectedInCoin","getSelectedInPrice","FormControl","TextField","fullWidth","value","label","onChange","event","target","variant","InputLabel","id","Select","labelId","MenuItem","setSelectedOutCoin","firstBlock","App","Container","maxWidth","Grid","container","item","xs","components_CryptoTable","components_ConverterBlock","ReactDOM","createRoot","document","getElementById","render","StrictMode","mobxreact_esm","src_App"],"mappings":"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","file":"static/js/main.cafef07c.chunk.js","sourcesContent":["import { observable, computed, action, makeObservable} from 'mobx';\r\n\r\nclass ConverterStore {\r\n    @observable selectedInCoin={\r\n        name:'BTC',\r\n    }\r\n    @computed\r\n    get getSelectedInCoin() {\r\n        return this.selectedInCoin;\r\n    }\r\n    @action\r\n    setSelectedInCoin(name:string) {\r\n        this.selectedInCoin = {\r\n            name: name\r\n        };\r\n    }\r\n\r\n    @observable selectedInPrice={\r\n        price: 1,\r\n    }\r\n    @computed\r\n    get getSelectedInPrice() {\r\n        return this.selectedInPrice;\r\n    }\r\n    @action\r\n    setSelectedInPrice(price:number) {\r\n        this.selectedInPrice = {\r\n            price: price\r\n        };\r\n    }\r\n\r\n    @observable selectedOutCoin={\r\n        name:'BTC',\r\n    }\r\n    @computed\r\n    get getSelectedOutCoin() {\r\n        return this.selectedOutCoin;\r\n    }\r\n    @action\r\n    setSelectedOutCoin(name:string) {\r\n        this.selectedOutCoin = {\r\n            name: name\r\n        };\r\n    }\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n}\r\n\r\nexport default ConverterStore;","import axios from \"axios\";\r\nimport { observable, computed, action, makeObservable} from \"mobx\";\r\nimport { TCoin, TCoinDiff } from \"../types\";\r\n\r\nclass CurrenciesStore {\r\n    //отслеживание состояний (отслеживаем наши обьекты)\r\n    @observable private items: TCoin[]=[];\r\n    @observable private diffObj: TCoinDiff = {};\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    //вычисляемое (для создания функций которые вычисляют свое значение из состояния)\r\n    @computed\r\n    get getItems(){\r\n        return this.items;\r\n    }\r\n    @computed\r\n    get getDiffObj() {\r\n        return this.diffObj;\r\n    }\r\n\r\n    //Обновление состояния с помощью действий (помечает метод как действие, которое изменит состояние)\r\n    @action\r\n    setItems=(items:TCoin[]):void=>{\r\n        this.diffObj = this.diffCurrencies(this.items, items).reduce(\r\n            (initObj: TCoinDiff, obj: TCoin) => {\r\n              const newObj: TCoin = items.find(o => o.name === obj.name)!;\r\n              const oldObj: TCoin = this.items.find(itemObj => itemObj.name === newObj.name)!;\r\n              const color: string =\r\n                newObj.price === oldObj.price ? '' : newObj.price > oldObj.price ? 'green' : 'red';\r\n      \r\n              initObj[newObj.name] = color;\r\n      \r\n              return initObj;\r\n            },{},\r\n        );\r\n        this.items=items;\r\n    };\r\n\r\n    @action\r\n    fetchCoins=()=>{\r\n        axios.get('https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD')\r\n            .then((response)=>{\r\n                const coins:TCoin[]=response.data.Data.map((coin:any)=>{\r\n                    const obj:TCoin={\r\n                        name:coin.CoinInfo.Name,\r\n                        fullName:coin.CoinInfo.FullName,\r\n                        imageUrl:`https://www.cryptocompare.com/${coin.CoinInfo.ImageUrl}`,\r\n                        price:coin.RAW.USD.PRICE.toFixed(3),\r\n                        volume24Hour:coin.RAW.USD.VOLUME24HOUR.toFixed(0),\r\n                    };\r\n                    \r\n                    return obj;\r\n                    });\r\n                this.setItems(coins);\r\n            });\r\n    };\r\n    \r\n    diffCurrencies(arr1: TCoin[], arr2: TCoin[]) {\r\n        return arr1.filter((obj, index) => {\r\n          if (obj.price !== arr2[index].price) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n    }\r\n}\r\nexport default CurrenciesStore;\r\n","import { createContext } from \"react\";\r\nimport ConverterStore from \"./converter-store\";\r\nimport CurrenciesStore from \"./currencies-store\";\r\n\r\nconst stores=createContext({\r\n    currenciesStore:new CurrenciesStore(),\r\n    converterStore:new ConverterStore(),\r\n})\r\nexport default stores; ","import { useContext } from 'react'\r\nimport stores from '../stores'\r\n\r\nexport const useStores = () => useContext(stores);","import React, {useState, useEffect, useContext } from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {IBlocks, TCoin, TCoinDiff} from \"../types\";\r\nimport {observer } from \"mobx-react-lite\";\r\nimport { useStores } from \"../hooks/use-stores\";\r\nimport '../index.css';\r\n\r\nconst currencyIcon={\r\n  width:'18px',\r\n  height:'18px'\r\n};\r\n\r\nconst CryptoTable:React.FC<IBlocks>=observer(()=>{\r\n  const {currenciesStore,converterStore} = useStores();\r\n  const items: TCoin[] = currenciesStore!.getItems;\r\n  const diffObj: TCoinDiff = currenciesStore!.getDiffObj;\r\n  const [ flag,setFlag]=useState(true);\r\n  \r\n  useEffect(() =>{\r\n    if(flag){\r\n      update();\r\n    }\r\n    const timerId =setInterval(()=>{\r\n      currenciesStore!.fetchCoins();\r\n    }, 15000);\r\n    return () => {\r\n      clearInterval(timerId);\r\n    } \r\n  }, [currenciesStore!.getItems]);\r\n\r\n  const update=()=>{\r\n    currenciesStore!.fetchCoins();\r\n    setFlag(false);\r\n  }\r\n  const onClickRow = (coin: TCoin) => {\r\n    converterStore.setSelectedInCoin(coin.name);\r\n    converterStore!.setSelectedInPrice(coin.price);\r\n  };\r\n\r\n  return (\r\n      <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ICON</TableCell>\r\n                <TableCell align=\"center\">Name</TableCell>\r\n                <TableCell align=\"center\">FullName</TableCell>\r\n                <TableCell align=\"center\">Price</TableCell>\r\n                <TableCell align=\"center\">volume24Hour</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!items.length ? 'Загрузка...' : items.map((coin:TCoin) => (\r\n                <TableRow\r\n                  className={\"cursor\"}\r\n                  onClick={()=>onClickRow(coin)}\r\n                  key={coin.name}\r\n                  hover\r\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <img style={currencyIcon} src={coin.imageUrl} alt='image'></img>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{coin.name}</TableCell>\r\n                  <TableCell align=\"center\">{coin.fullName}</TableCell>\r\n                  <TableCell \r\n                    className={diffObj[coin.name] && `${diffObj[coin.name]}`}\r\n                    align=\"center\">$ {coin.price}</TableCell>\r\n                  <TableCell align=\"center\">$ {coin.volume24Hour}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      </TableContainer>\r\n)})\r\nexport default CryptoTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Paper, styled } from \"@mui/material\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { FormControl, InputLabel, Typography } from '@mui/material';\r\nimport {observer } from \"mobx-react-lite\";\r\nimport { useStores } from \"../hooks/use-stores\";\r\nimport { IBlocks} from \"../types\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n  \r\nconst cryptoInputBox={\r\n    marginTop:'10px',\r\n};\r\n  \r\nconst currencyInput={\r\n    minWidth:'65%',\r\n    marginRight:'10px',\r\n};\r\nconst currencyType={\r\n    minWidth:'32%',\r\n};\r\n\r\nconst ConverterBlock:React.FC<IBlocks>=observer(()=>{\r\n    const {converterStore,currenciesStore}=useStores();\r\n    \r\n    const coins:string[]=currenciesStore!.getItems.map(coin=>coin.name);\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n        converterStore.setSelectedOutCoin(event.target.value as string);\r\n        setValue2(findprice());\r\n    };\r\n    const handleClick = (event: SelectChangeEvent) => {\r\n        converterStore.setSelectedInCoin(event.target.value as string);\r\n        setValue2(findprice());\r\n    };\r\n    \r\n    const [value2,setValue2]=useState(0);\r\n    \r\n    const findprice=()=>{\r\n        const curOutPriceName:any=currenciesStore.getItems.find(coin=>coin.name==converterStore.getSelectedOutCoin.name);\r\n        const curInPriceName:any=currenciesStore.getItems.find(coin=>coin.name==converterStore.getSelectedInCoin.name);\r\n        const curPrice:any=converterStore!.getSelectedInPrice.price*curInPriceName.price/curOutPriceName.price;\r\n        return curPrice;\r\n    }\r\n\r\n    const PriceClick = (event: any) => {\r\n        converterStore.setSelectedInPrice(event.target.value as number);\r\n        setValue2(findprice());\r\n    };    \r\n\r\n    return (\r\n    <Item>\r\n        <div >\r\n            <FormControl style={currencyInput}>\r\n                <TextField \r\n                fullWidth\r\n                value={converterStore!.getSelectedInPrice.price}\r\n                label='Введенное значение' \r\n                onChange={PriceClick}\r\n                variant=\"outlined\" />\r\n            </FormControl>\r\n            <FormControl style={currencyType}>\r\n                <InputLabel id=\"demo-simple-select-autowidth-label\">Валюта</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={converterStore!.getSelectedInCoin.name}\r\n                onChange={handleClick}\r\n                label=\"Валюта\"\r\n                >\r\n                    {coins.map(name=><MenuItem value={name}>{name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n        <div style={cryptoInputBox}>\r\n            <FormControl style={currencyInput}>\r\n                <TextField \r\n                fullWidth\r\n                label=\"Сумма получаемая\" \r\n                value={value2}\r\n                variant=\"outlined\" />\r\n            </FormControl>\r\n            <FormControl style={currencyType}>\r\n                <InputLabel id=\"demo-simple-select-autowidth-label\">Валюта</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                onChange={handleChange}\r\n                value={converterStore.getSelectedOutCoin.name}\r\n                label=\"Валюта\"\r\n                >\r\n                    {coins.map(name=><MenuItem value={name}>{name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n        \r\n    </Item>\r\n)})\r\nexport default ConverterBlock;\r\n\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport CryptoTable from './components/CryptoTable';\r\nimport ConverterBlock from './components/ConverterBlock';\r\n\r\nconst firstBlock={padding:'10px'};\r\n\r\nfunction App() {\r\n  return (\r\n    <Container style={firstBlock} maxWidth=\"lg\">\r\n      <h1>Hello</h1>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <CryptoTable/>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <ConverterBlock/>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"mobx-react\";\r\nimport stores from './stores';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider {...stores}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}